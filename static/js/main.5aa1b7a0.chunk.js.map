{"version":3,"sources":["logic/operate.js","components/calculator.js","logic/calculate.js","pages/home.js","components/Nav.js","pages/quote.js","App.js","reportWebVitals.js","index.js"],"names":["operate","numberOne","numberTwo","operation","one","Big","two","plus","toString","minus","times","div","err","mod","Error","Calculator","useState","total","next","state","setState","useEffect","document","querySelector","innerHTML","undefined","displayBoard","e","a","obj","buttonName","target","match","includes","parseFloat","path","Fragment","className","onClick","Home","Nav","linkStyles","color","this","props","class","to","style","React","Component","Quote","id","App","push","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5aa1b7a0.chunk.js","sourcesContent":["import Big from 'big.js';\r\n\r\nexport default function operate(numberOne, numberTwo, operation) {\r\n  const one = Big(numberOne);\r\n  const two = Big(numberTwo);\r\n  if (operation === '+') {\r\n    return one.plus(two).toString();\r\n  }\r\n  if (operation === '-') {\r\n    return one.minus(two).toString();\r\n  }\r\n  if (operation === 'x') {\r\n    return one.times(two).toString();\r\n  }\r\n  if (operation === 'รท') {\r\n    try {\r\n      return one.div(two).toString();\r\n    } catch (err) {\r\n      return \"Can't divide by 0.\";\r\n    }\r\n  }\r\n  if (operation === '%') {\r\n    return one.mod(two).toString();\r\n  }\r\n  throw Error(`Unknown operation '${operation}'`);\r\n}\r\n","import React, { useEffect, useState } from 'react'; // eslint-disable-line\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'; // eslint-disable-line\r\nimport calculate from '../logic/calculate';\r\n\r\nconst Calculator = () => {\r\n  const [state, setState] = useState({ total: null, next: null, operation: null });\r\n  useEffect(() => {\r\n    if (state.total !== null && state.next === null) {\r\n      document.querySelector('.display-board').innerHTML = state.total;\r\n    } else if ((state.next !== null && state.total !== null)\r\n    && (state.next !== undefined && state.total !== undefined)) {\r\n      document.querySelector('.display-board').innerHTML = state.next;\r\n    } else if (state.next !== null && state.total === null) {\r\n      document.querySelector('.display-board').innerHTML = state.next;\r\n    } else if ((state.next === null && state.total === null)) {\r\n      document.querySelector('.display-board').innerHTML = '0';\r\n    } else if (((typeof state.next) !== 'number') || (typeof state.total) !== 'number') {\r\n      setState({ next: null, total: null, operation: null });\r\n    }\r\n  }, [state]);\r\n  const displayBoard = async (e) => {\r\n    await setState(calculate(state, e.target.innerHTML));\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <Route path='/'>\r\n        <React.Fragment>\r\n          <main>\r\n            <h2 className='calculator-title'>Let's do some Math!</h2>\r\n            <div className='calculator-container'>\r\n              <div className='display-board'>0</div>\r\n              <button className='s-button' onClick={(e) => displayBoard(e)}>AC</button>\r\n              <button className='s-button' onClick={(e) => displayBoard(e)}>+/-</button>\r\n              <button className='s-button' onClick={(e) => displayBoard(e)}>%</button>\r\n              <button className='s-orange-button' onClick={(e) => displayBoard(e)}>รท</button>\r\n              <button className='s-button' onClick={(e) => displayBoard(e)}>7</button>\r\n              <button className='s-button' onClick={(e) => displayBoard(e)}>8</button>\r\n              <button className='s-button' onClick={(e) => displayBoard(e)}>9</button>\r\n              <button className='s-orange-button' onClick={(e) => displayBoard(e)}>x</button>\r\n              <button className='s-button' onClick={(e) => displayBoard(e)}>4</button>\r\n              <button className='s-button' onClick={(e) => displayBoard(e)}>5</button>\r\n              <button className='s-button' onClick={(e) => displayBoard(e)}>6</button>\r\n              <button className='s-orange-button' onClick={(e) => displayBoard(e)}>-</button>\r\n              <button className='s-button' onClick={(e) => displayBoard(e)}>1</button>\r\n              <button className='s-button' onClick={(e) => displayBoard(e)}>2</button>\r\n              <button className='s-button' onClick={(e) => displayBoard(e)}>3</button>\r\n              <button className='s-orange-button' onClick={(e) => displayBoard(e)}>+</button>\r\n              <button className='m-button' onClick={(e) => displayBoard(e)}>0</button>\r\n              <button className='s-button' onClick={(e) => displayBoard(e)}>.</button>\r\n              <button className='s-orange-button' onClick={(e) => displayBoard(e)}>=</button>\r\n            </div>\r\n          </main>\r\n        </React.Fragment>\r\n      </Route>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Calculator;","import operate from './operate';\r\n\r\nfunction isNumber(item) {\r\n  return !!item.match(/[0-9]+/);\r\n}\r\n\r\n/**\r\n * Given a button name and a calculator data object, return an updated\r\n * calculator data object.\r\n *\r\n * Calculator data object contains:\r\n *   total:s      the running total\r\n *   next:String       the next number to be operated on with the total\r\n *   operation:String  +, -, etc.\r\n */\r\nexport default function calculate(obj, buttonName) {\r\n  if (buttonName === 'AC') {\r\n    return {\r\n      total: null,\r\n      next: null,\r\n      operation: null,\r\n    };\r\n  }\r\n\r\n  if (isNumber(buttonName)) {\r\n    if (buttonName === '0' && obj.next === '0') {\r\n      return {};\r\n    }\r\n    // If there is an operation, update next\r\n    if (obj.operation) {\r\n      if (obj.next) {\r\n        return { ...obj, next: obj.next + buttonName };\r\n      }\r\n      return { ...obj, next: buttonName };\r\n    }\r\n    // If there is no operation, update next and clear the value\r\n    if (obj.next) {\r\n      return {\r\n        next: obj.next + buttonName,\r\n        total: null,\r\n      };\r\n    }\r\n    return {\r\n      next: buttonName,\r\n      total: null,\r\n    };\r\n  }\r\n\r\n  if (buttonName === '.') {\r\n    if (obj.next) {\r\n      if (obj.next.includes('.')) {\r\n        return { ...obj };\r\n      }\r\n      return { ...obj, next: `${obj.next}.` };\r\n    }\r\n    if (obj.operation) {\r\n      return { next: '0.' };\r\n    }\r\n    if (obj.total) {\r\n      if (obj.total.includes('.')) {\r\n        return {};\r\n      }\r\n      return { total: `${obj.total}.` };\r\n    }\r\n    return { total: '0.' };\r\n  }\r\n\r\n  if (buttonName === '=') {\r\n    if (obj.next && obj.operation) {\r\n      return {\r\n        total: operate(obj.total, obj.next, obj.operation),\r\n        next: null,\r\n        operation: null,\r\n      };\r\n    }\r\n    // '=' with no operation, nothing to do\r\n    return {};\r\n  }\r\n\r\n  if (buttonName === '+/-') {\r\n    if (obj.next) {\r\n      return { ...obj, next: (-1 * parseFloat(obj.next)).toString() };\r\n    }\r\n    if (obj.total) {\r\n      return { ...obj, total: (-1 * parseFloat(obj.total)).toString() };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  // Button must be an operation\r\n\r\n  // When the user presses an operation button without having entered\r\n  // a number first, do nothing.\r\n  // if (!obj.next && !obj.total) {\r\n  //   return {};\r\n  // }\r\n\r\n  // User pressed an operation after pressing '='\r\n  if (!obj.next && obj.total && !obj.operation) {\r\n    return { ...obj, operation: buttonName };\r\n  }\r\n\r\n  // User pressed an operation button and there is an existing operation\r\n  if (obj.operation) {\r\n    if (obj.total && !obj.next) {\r\n      return { ...obj, operation: buttonName };\r\n    }\r\n  }\r\n\r\n  // no operation yet, but the user typed one\r\n\r\n  // The user hasn't typed a number yet, just save the operation\r\n  if (!obj.next) {\r\n    return { operation: buttonName };\r\n  }\r\n\r\n  // save the operation and shift 'next' into 'total'\r\n  return {\r\n    total: obj.next,\r\n    next: null,\r\n    operation: buttonName,\r\n  };\r\n}\r\n","import React from 'react'; // eslint-disable-line\r\n\r\nconst Home = () => {\r\n  const home = <div>\r\n    <h2 className=\"title\">Welcome to our page!</h2>\r\n    <h3 className=\"home\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas quis quam elementum\r\n      lectus tincidunt condimentum. Maecenas pretium elit vel nisl volutpat elementum.\r\n      Nullam quam dolor, placerat eget leo et, congue malesuada lectus. Proin vitae urna\r\n      vitae est auctor facilisis ut ac dolor.\r\n      Aenean vestibulum tempor magna, in cursus risus varius quis.\r\n      Aliquam vitae pretium est, in ultrices ante. Vestibulum sed auctor libero.\r\n      Donec posuere lacus ut mauris maximus ornare vitae quis tellus. <br/> <br/>\r\n      Mauris convallis orci id massa consectetur, eu elementum odio posuere.\r\n      Aenean rhoncus turpis ut consectetur bibendum. Vivamus odio arcu,\r\n      vulputate non rutrum sit amet, porttitor ac sapien. Nunc luctus odio eros,\r\n      ut accumsan est rhoncus et. Vestibulum luctus metus euismod lobortis blandit.\r\n    </h3>\r\n    </div>;\r\n  return home;\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Link } from 'react-router-dom'; // eslint-disable-line\r\n\r\nclass Nav extends React.Component {\r\n  render() {\r\n    const linkStyles = {\r\n      color: 'white',\r\n    };\r\n\r\n    return (\r\n      <nav className={this.props.class}>\r\n        <h1 className=\"logo\">Math Magicians</h1>\r\n        <ul className='menu-container'>\r\n          <Link to=\"https://felipeg005.github.io/Math-Magicians-React-App/\" style={linkStyles}>\r\n            <li>Home</li>\r\n          </Link>\r\n          <Link to=\"https://felipeg005.github.io/Math-Magicians-React-App/calculator\" style={linkStyles}>\r\n            <li>Calculator</li>\r\n          </Link>\r\n          <Link to=\"https://felipeg005.github.io/Math-Magicians-React-App/quote\" style={linkStyles}>\r\n            <li>Quote</li>\r\n          </Link>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\n\r\nclass Quote extends React.Component {\r\n  render() {\r\n    return (\r\n      <h2 id={this.props} className='quote'>\"As far as the laws of mathematics refer to reality,\r\n        they are not certain, and as far as they are certain, they do not refer to reality\".\r\n        โ Albert Einstein\r\n      </h2>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Quote;","import './App.css';\r\nimport React from 'react'; // eslint-disable-line\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';// eslint-disable-line\r\nimport Calculator from './components/calculator'; // eslint-disable-line\r\nimport Home from './pages/home';\r\nimport Nav from './components/Nav'; // eslint-disable-line\r\nimport Quote from './pages/quote';\r\n\r\nconst App = () => {\r\n  const arr = [];\r\n  arr.push(1);\r\n  return (\r\n    <Router>\r\n      <Nav class=\"nav-container\"/>\r\n      <Switch>\r\n        <Route path=\"https://felipeg005.github.io/Math-Magicians-React-App/\" exact component={Home} />\r\n        <Route path=\"https://felipeg005.github.io/Math-Magicians-React-App/calculator\" component={Calculator} />\r\n        <Route path=\"https://felipeg005.github.io/Math-Magicians-React-App/quote\" component={Quote} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => { // eslint-disable-line\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => { // eslint-disable-line\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react'; // eslint-disable-line\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App'; // eslint-disable-line\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root') // eslint-disable-line\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}