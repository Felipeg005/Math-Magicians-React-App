{"version":3,"sources":["logic/operate.js","components/calculator.js","logic/calculate.js","App.js","reportWebVitals.js","index.js"],"names":["operate","numberOne","numberTwo","operation","one","Big","two","plus","toString","minus","times","div","err","mod","Error","Calculator","props","state","total","next","e","a","this","setState","obj","buttonName","target","innerHTML","match","includes","parseFloat","document","querySelector","className","containerClass","onClick","displayBoard","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"4QAEe,SAASA,EAAQC,EAAWC,EAAWC,GACpD,IAAMC,EAAMC,IAAIJ,GACVK,EAAMD,IAAIH,GAChB,GAAkB,MAAdC,EACF,OAAOC,EAAIG,KAAKD,GAAKE,WAEvB,GAAkB,MAAdL,EACF,OAAOC,EAAIK,MAAMH,GAAKE,WAExB,GAAkB,MAAdL,EACF,OAAOC,EAAIM,MAAMJ,GAAKE,WAExB,GAAkB,SAAdL,EACF,IACE,OAAOC,EAAIO,IAAIL,GAAKE,WACpB,MAAOI,GACP,MAAO,qBAGX,GAAkB,MAAdT,EACF,OAAOC,EAAIS,IAAIP,GAAKE,WAEtB,MAAMM,MAAM,sBAAD,OAAuBX,EAAvB,M,WCrBPY,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,MAAO,KACPC,KAAM,KACNhB,UAAW,MALI,E,uFASnB,WAAmBiB,GAAnB,SAAAC,EAAA,sEACQC,KAAKC,UCCmBC,EDDAF,KAAKL,MCElB,QADkBQ,EDDOL,EAAEM,OAAOC,WCG5C,CACLT,MAAO,KACPC,KAAM,KACNhB,UAAW,MAIFsB,EArBCG,MAAM,UAsBC,MAAfH,GAAmC,MAAbD,EAAIL,KACrB,GAGLK,EAAIrB,UACFqB,EAAIL,KACC,2BAAKK,GAAZ,IAAiBL,KAAMK,EAAIL,KAAOM,IAE7B,2BAAKD,GAAZ,IAAiBL,KAAMM,IAGrBD,EAAIL,KACC,CACLA,KAAMK,EAAIL,KAAOM,EACjBP,MAAO,MAGJ,CACLC,KAAMM,EACNP,MAAO,MAIQ,MAAfO,EACED,EAAIL,KACFK,EAAIL,KAAKU,SAAS,KACb,eAAKL,GAEP,2BAAKA,GAAZ,IAAiBL,KAAK,GAAD,OAAKK,EAAIL,KAAT,OAEnBK,EAAIrB,UACC,CAAEgB,KAAM,MAEbK,EAAIN,MACFM,EAAIN,MAAMW,SAAS,KACd,GAEF,CAAEX,MAAM,GAAD,OAAKM,EAAIN,MAAT,MAET,CAAEA,MAAO,MAGC,MAAfO,EACED,EAAIL,MAAQK,EAAIrB,UACX,CACLe,MAAOlB,EAAQwB,EAAIN,MAAOM,EAAIL,KAAMK,EAAIrB,WACxCgB,KAAM,KACNhB,UAAW,MAIR,GAGU,QAAfsB,EACED,EAAIL,KACC,2BAAKK,GAAZ,IAAiBL,OAAQ,EAAIW,WAAWN,EAAIL,OAAOX,aAEjDgB,EAAIN,MACC,2BAAKM,GAAZ,IAAiBN,QAAS,EAAIY,WAAWN,EAAIN,QAAQV,aAEhD,GAYJgB,EAAIL,OAAQK,EAAIN,OAAUM,EAAIrB,UAK/BqB,EAAIrB,WACFqB,EAAIN,QAAUM,EAAIL,KACb,2BAAKK,GAAZ,IAAiBrB,UAAWsB,IAO3BD,EAAIL,KAKF,CACLD,MAAOM,EAAIL,KACXA,KAAM,KACNhB,UAAWsB,GAPJ,CAAEtB,UAAWsB,GAdb,2BAAKD,GAAZ,IAAiBrB,UAAWsB,MDtF9B,OAK2B,OAArBH,KAAKL,MAAMC,OAAsC,OAApBI,KAAKL,MAAME,KAC1CY,SAASC,cAAc,kBAAkBL,UAAYL,KAAKL,MAAMC,MACnC,OAApBI,KAAKL,MAAME,MAAsC,OAArBG,KAAKL,MAAMC,OAEnB,OAApBI,KAAKL,MAAME,MAAsC,OAArBG,KAAKL,MAAMC,MADhDa,SAASC,cAAc,kBAAkBL,UAAYL,KAAKL,MAAME,KAGnC,OAApBG,KAAKL,MAAME,MAAsC,OAArBG,KAAKL,MAAMC,MAChDa,SAASC,cAAc,kBAAkBL,UAAY,IACd,kBAArBL,KAAKL,MAAME,MAAqD,kBAAtBG,KAAKL,MAAMC,OACvEI,KAAKC,SAAS,CAAEJ,KAAM,KAAMD,MAAO,KAAMf,UAAW,OAdxD,iCCEa,IAAmBqB,EAAKC,IDFrC,Y,2EAkBA,WAAU,IAAD,OACP,OACE,uBAAMQ,UAAWX,KAAKN,MAAMkB,eAA5B,UACE,qBAAKD,UAAU,gBAAf,eACA,wBAAQA,UAAU,WAAWE,QAAS,SAACf,GAAD,OAAO,EAAKgB,aAAahB,IAA/D,gBACA,wBAAQa,UAAU,WAAWE,QAAS,SAACf,GAAD,OAAO,EAAKgB,aAAahB,IAA/D,iBACA,wBAAQa,UAAU,WAAWE,QAAS,SAACf,GAAD,OAAO,EAAKgB,aAAahB,IAA/D,eACA,wBAAQa,UAAU,kBAAkBE,QAAS,SAACf,GAAD,OAAO,EAAKgB,aAAahB,IAAtE,kBACA,wBAAQa,UAAU,WAAWE,QAAS,SAACf,GAAD,OAAO,EAAKgB,aAAahB,IAA/D,eACA,wBAAQa,UAAU,WAAWE,QAAS,SAACf,GAAD,OAAO,EAAKgB,aAAahB,IAA/D,eACA,wBAAQa,UAAU,WAAWE,QAAS,SAACf,GAAD,OAAO,EAAKgB,aAAahB,IAA/D,eACA,wBAAQa,UAAU,kBAAkBE,QAAS,SAACf,GAAD,OAAO,EAAKgB,aAAahB,IAAtE,eACA,wBAAQa,UAAU,WAAWE,QAAS,SAACf,GAAD,OAAO,EAAKgB,aAAahB,IAA/D,eACA,wBAAQa,UAAU,WAAWE,QAAS,SAACf,GAAD,OAAO,EAAKgB,aAAahB,IAA/D,eACA,wBAAQa,UAAU,WAAWE,QAAS,SAACf,GAAD,OAAO,EAAKgB,aAAahB,IAA/D,eACA,wBAAQa,UAAU,kBAAkBE,QAAS,SAACf,GAAD,OAAO,EAAKgB,aAAahB,IAAtE,eACA,wBAAQa,UAAU,WAAWE,QAAS,SAACf,GAAD,OAAO,EAAKgB,aAAahB,IAA/D,eACA,wBAAQa,UAAU,WAAWE,QAAS,SAACf,GAAD,OAAO,EAAKgB,aAAahB,IAA/D,eACA,wBAAQa,UAAU,WAAWE,QAAS,SAACf,GAAD,OAAO,EAAKgB,aAAahB,IAA/D,eACA,wBAAQa,UAAU,kBAAkBE,QAAS,SAACf,GAAD,OAAO,EAAKgB,aAAahB,IAAtE,eACA,wBAAQa,UAAU,WAAWE,QAAS,SAACf,GAAD,OAAO,EAAKgB,aAAahB,IAA/D,eACA,wBAAQa,UAAU,WAAWE,QAAS,SAACf,GAAD,OAAO,EAAKgB,aAAahB,IAA/D,eACA,wBAAQa,UAAU,kBAAkBE,QAAS,SAACf,GAAD,OAAO,EAAKgB,aAAahB,IAAtE,sB,GAlDiBiB,IAAMC,WAwDhBvB,IEvDTwB,E,4JACJ,WACE,OACEjB,KAAKN,MACL,mCACA,cAAC,EAAD,CAAYkB,eAAe,+B,GALfG,IAAMC,WAWTC,ICHAC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpB,SAASqB,eAAe,SAM1BZ,M","file":"static/js/main.814b2a1a.chunk.js","sourcesContent":["import Big from 'big.js';\r\n\r\nexport default function operate(numberOne, numberTwo, operation) {\r\n  const one = Big(numberOne);\r\n  const two = Big(numberTwo);\r\n  if (operation === '+') {\r\n    return one.plus(two).toString();\r\n  }\r\n  if (operation === '-') {\r\n    return one.minus(two).toString();\r\n  }\r\n  if (operation === 'x') {\r\n    return one.times(two).toString();\r\n  }\r\n  if (operation === 'รท') {\r\n    try {\r\n      return one.div(two).toString();\r\n    } catch (err) {\r\n      return \"Can't divide by 0.\";\r\n    }\r\n  }\r\n  if (operation === '%') {\r\n    return one.mod(two).toString();\r\n  }\r\n  throw Error(`Unknown operation '${operation}'`);\r\n}\r\n","import React from 'react'; // eslint-disable-line\r\nimport calculate from '../logic/calculate';\r\n\r\nclass Calculator extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      total: null,\r\n      next: null,\r\n      operation: null,\r\n    };\r\n  }\r\n\r\n  async displayBoard(e) {\r\n    await this.setState(calculate(this.state, e.target.innerHTML));\r\n    // if (((typeof this.state.next) !== 'number') || (typeof this.state.total) !== 'number') {\r\n    //   // this.setState({ next: null, total: null, operation: null });\r\n    // } else\r\n    if (this.state.total !== null && this.state.next === null) {\r\n      document.querySelector('.display-board').innerHTML = this.state.total;\r\n    } else if (this.state.next !== null && this.state.total !== null) {\r\n      document.querySelector('.display-board').innerHTML = this.state.next;\r\n    } else if (this.state.next !== null && this.state.total === null) {\r\n      document.querySelector('.display-board').innerHTML = this.state.next;\r\n    } else if (this.state.next === null && this.state.total === null) {\r\n      document.querySelector('.display-board').innerHTML = '0';\r\n    } else if (((typeof this.state.next) !== 'number') || (typeof this.state.total) !== 'number') {\r\n      this.setState({ next: null, total: null, operation: null });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <main className={this.props.containerClass}>\r\n        <div className='display-board'>0</div>\r\n        <button className='s-button' onClick={(e) => this.displayBoard(e)}>AC</button>\r\n        <button className='s-button' onClick={(e) => this.displayBoard(e)}>+/-</button>\r\n        <button className='s-button' onClick={(e) => this.displayBoard(e)}>%</button>\r\n        <button className='s-orange-button' onClick={(e) => this.displayBoard(e)}>รท</button>\r\n        <button className='s-button' onClick={(e) => this.displayBoard(e)}>7</button>\r\n        <button className='s-button' onClick={(e) => this.displayBoard(e)}>8</button>\r\n        <button className='s-button' onClick={(e) => this.displayBoard(e)}>9</button>\r\n        <button className='s-orange-button' onClick={(e) => this.displayBoard(e)}>x</button>\r\n        <button className='s-button' onClick={(e) => this.displayBoard(e)}>4</button>\r\n        <button className='s-button' onClick={(e) => this.displayBoard(e)}>5</button>\r\n        <button className='s-button' onClick={(e) => this.displayBoard(e)}>6</button>\r\n        <button className='s-orange-button' onClick={(e) => this.displayBoard(e)}>-</button>\r\n        <button className='s-button' onClick={(e) => this.displayBoard(e)}>1</button>\r\n        <button className='s-button' onClick={(e) => this.displayBoard(e)}>2</button>\r\n        <button className='s-button' onClick={(e) => this.displayBoard(e)}>3</button>\r\n        <button className='s-orange-button' onClick={(e) => this.displayBoard(e)}>+</button>\r\n        <button className='m-button' onClick={(e) => this.displayBoard(e)}>0</button>\r\n        <button className='s-button' onClick={(e) => this.displayBoard(e)}>.</button>\r\n        <button className='s-orange-button' onClick={(e) => this.displayBoard(e)}>=</button>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Calculator;","import operate from './operate';\r\n\r\nfunction isNumber(item) {\r\n  return !!item.match(/[0-9]+/);\r\n}\r\n\r\n/**\r\n * Given a button name and a calculator data object, return an updated\r\n * calculator data object.\r\n *\r\n * Calculator data object contains:\r\n *   total:s      the running total\r\n *   next:String       the next number to be operated on with the total\r\n *   operation:String  +, -, etc.\r\n */\r\nexport default function calculate(obj, buttonName) {\r\n  if (buttonName === 'AC') {\r\n    return {\r\n      total: null,\r\n      next: null,\r\n      operation: null,\r\n    };\r\n  }\r\n\r\n  if (isNumber(buttonName)) {\r\n    if (buttonName === '0' && obj.next === '0') {\r\n      return {};\r\n    }\r\n    // If there is an operation, update next\r\n    if (obj.operation) {\r\n      if (obj.next) {\r\n        return { ...obj, next: obj.next + buttonName };\r\n      }\r\n      return { ...obj, next: buttonName };\r\n    }\r\n    // If there is no operation, update next and clear the value\r\n    if (obj.next) {\r\n      return {\r\n        next: obj.next + buttonName,\r\n        total: null,\r\n      };\r\n    }\r\n    return {\r\n      next: buttonName,\r\n      total: null,\r\n    };\r\n  }\r\n\r\n  if (buttonName === '.') {\r\n    if (obj.next) {\r\n      if (obj.next.includes('.')) {\r\n        return { ...obj };\r\n      }\r\n      return { ...obj, next: `${obj.next}.` };\r\n    }\r\n    if (obj.operation) {\r\n      return { next: '0.' };\r\n    }\r\n    if (obj.total) {\r\n      if (obj.total.includes('.')) {\r\n        return {};\r\n      }\r\n      return { total: `${obj.total}.` };\r\n    }\r\n    return { total: '0.' };\r\n  }\r\n\r\n  if (buttonName === '=') {\r\n    if (obj.next && obj.operation) {\r\n      return {\r\n        total: operate(obj.total, obj.next, obj.operation),\r\n        next: null,\r\n        operation: null,\r\n      };\r\n    }\r\n    // '=' with no operation, nothing to do\r\n    return {};\r\n  }\r\n\r\n  if (buttonName === '+/-') {\r\n    if (obj.next) {\r\n      return { ...obj, next: (-1 * parseFloat(obj.next)).toString() };\r\n    }\r\n    if (obj.total) {\r\n      return { ...obj, total: (-1 * parseFloat(obj.total)).toString() };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  // Button must be an operation\r\n\r\n  // When the user presses an operation button without having entered\r\n  // a number first, do nothing.\r\n  // if (!obj.next && !obj.total) {\r\n  //   return {};\r\n  // }\r\n\r\n  // User pressed an operation after pressing '='\r\n  if (!obj.next && obj.total && !obj.operation) {\r\n    return { ...obj, operation: buttonName };\r\n  }\r\n\r\n  // User pressed an operation button and there is an existing operation\r\n  if (obj.operation) {\r\n    if (obj.total && !obj.next) {\r\n      return { ...obj, operation: buttonName };\r\n    }\r\n  }\r\n\r\n  // no operation yet, but the user typed one\r\n\r\n  // The user hasn't typed a number yet, just save the operation\r\n  if (!obj.next) {\r\n    return { operation: buttonName };\r\n  }\r\n\r\n  // save the operation and shift 'next' into 'total'\r\n  return {\r\n    total: obj.next,\r\n    next: null,\r\n    operation: buttonName,\r\n  };\r\n}\r\n","import './App.css';\r\nimport React from 'react';\r\nimport Calculator from './components/calculator'; // eslint-disable-line\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      this.props,\r\n      <>\r\n      <Calculator containerClass='calculator-container' />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => { // eslint-disable-line\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => { // eslint-disable-line\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react'; // eslint-disable-line\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App'; // eslint-disable-line\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root') // eslint-disable-line\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}